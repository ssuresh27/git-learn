suresh@Sureshs-MacBook-Pro comments % git log
commit 22938510a7bec077b42927e53ea18966d549faad (HEAD -> main)
Author: Suresh Sundararajan <yessures@gmail.com>
Date:   Sat Oct 21 10:39:40 2023 -0600

    Git doc referrece added

commit f87c4ed286d76be6d7c3395e2f116cad4ea29d35
Author: Suresh Sundararajan <yessures@gmail.com>
Date:   Sat Oct 21 10:33:18 2023 -0600

    Add Git Doc referrnce
    Git config for vscode

commit 0ca89ddacf6950a9141cc199a44759bd95610879
Author: Suresh Sundararajan <yessures@gmail.com>
Date:   Sat Oct 21 10:07:21 2023 -0600

    Stage all the files at once

commit a924e1c7f40da074155c086850d90a3956ce60ba
Author: Suresh Sundararajan <yessures@gmail.com>
Date:   Sat Oct 21 10:04:28 2023 -0600

    Create git_comments and exec git commit

commit 9acf53f21f3c2be4799067baea39e9033c107c47
Author: Suresh Sundararajan <yessures@gmail.com>
Date:   Sat Oct 21 09:58:37 2023 -0600

    day1 initial comments
suresh@Sureshs-MacBook-Pro comments % 
suresh@Sureshs-MacBook-Pro comments % 

suresh@Sureshs-MacBook-Pro comments % git log --oneline
011caa3 (HEAD -> main) Create git log
2293851 Git doc referrece added
f87c4ed Add Git Doc referrnce Git config for vscode
0ca89dd Stage all the files at once
a924e1c Create git_comments and exec git commit
9acf53f day1 initial comments
suresh@Sureshs-MacBook-Pro comments % 


suresh@Sureshs-MacBook-Pro git-learn % git checkout 3afadfc
Note: switching to '3afadfc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 3afadfc Create title for branches
suresh@Sureshs-MacBook-Pro git-learn % git switch -c deattch      
Switched to a new branch 'deattch'
suresh@Sureshs-MacBook-Pro git-learn % git status
On branch deattch
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	.DS_Store

nothing added to commit but untracked files present (use "git add" to track)
suresh@Sureshs-MacBook-Pro git-learn % git branch -v 
* deattch 3afadfc Create title for branches
  main    d5ad4ba git stash drop and clear
suresh@Sureshs-MacBook-Pro git-learn % git switch main
Switched to branch 'main'
suresh@Sureshs-MacBook-Pro git-learn % 

suresh@Sureshs-MacBook-Pro git-learn % git status                                                    
On branch main
nothing to commit, working tree clean
suresh@Sureshs-MacBook-Pro git-learn % tail -3 Git_comments 
git checkout HEAD <filename(s)>

git checkout %                                                                                                                                      suresh@Sureshs-MacBook-Pro git-learn % tail -3 Git_comments
git checkout 

This is test line to discard%                                                                                                                       suresh@Sureshs-MacBook-Pro git-learn % git status          
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Git_comments

no changes added to commit (use "git add" and/or "git commit -a")
suresh@Sureshs-MacBook-Pro git-learn % git checkout HEAD Git_comments 
Updated 1 path from 32d22b0
suresh@Sureshs-MacBook-Pro git-learn % git status                    
On branch main
nothing to commit, working tree clean
suresh@Sureshs-MacBook-Pro git-learn % tail -3 Git_comments          
git checkout HEAD <filename(s)>

git checkout %                                                                                                                                      suresh@Sureshs-MacBook-Pro git-learn % 
