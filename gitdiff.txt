suresh@Sureshs-MacBook-Pro comments % git diff                        
diff --git a/Git_comments b/Git_comments
index 43d4661..5ba3f9f 100644
--- a/Git_comments
+++ b/Git_comments
@@ -69,3 +69,6 @@ git branch -m <new_branch_name>
 switch branch firstbranch
 # 2. merge with branch
 merge branch sencondbranch
+
+#Git Diff to identify the difference
+git diff
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % 
suresh@Sureshs-MacBook-Pro comments % 

suresh@Sureshs-MacBook-Pro comments % git diff 
diff --git a/Git_comments b/Git_comments
index 43d4661..5ba3f9f 100644
--- a/Git_comments
+++ b/Git_comments
@@ -69,3 +69,6 @@ git branch -m <new_branch_name>
 switch branch firstbranch
 # 2. merge with branch
 merge branch sencondbranch
+
+#Git Diff to identify the difference
+git diff
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % git status                      
On branch gitdiff
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Git_comments

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	gitdiff.txt

no changes added to commit (use "git add" and/or "git commit -a")
suresh@Sureshs-MacBook-Pro comments % git add .
suresh@Sureshs-MacBook-Pro comments % git status
On branch gitdiff
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   Git_comments
	new file:   gitdiff.txt

suresh@Sureshs-MacBook-Pro comments % git diff  
suresh@Sureshs-MacBook-Pro comments % git commit -m "Create gitdiff file"
[gitdiff 50152ba] Create gitdiff file
 2 files changed, 18 insertions(+)
 create mode 100644 gitdiff.txt
suresh@Sureshs-MacBook-Pro comments % 

suresh@Sureshs-MacBook-Pro comments % git diff  
diff --git a/Git_comments b/Git_comments
index 5ba3f9f..fda547b 100644
--- a/Git_comments
+++ b/Git_comments
@@ -70,5 +70,8 @@ switch branch firstbranch
 # 2. merge with branch
 merge branch sencondbranch
 
-#Git Diff to identify the difference
-git diff
\ No newline at end of file
+
+
+#removed above line and added new line of same comment to find the diff status
+
+#Git Diff to identify the difference
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % 

# Git diff with HEAD

suresh@Sureshs-MacBook-Pro comments % git diff
diff --git a/Git_comments b/Git_comments
index 4efed62..07f5426 100644
--- a/Git_comments
+++ b/Git_comments
@@ -74,7 +74,9 @@ merge branch sencondbranch
 
 #removed above line and added new line of same comment to find the diff status
 
-#Git Diff to identify the difference
+#Git Diff to identify the difference NOT STAGED for next commit
 git diff
 # where '-' shows not present in file
-# '+' represents new connet availe in the file
\ No newline at end of file
+# '+' represents new connet availe in the file
+# Git Diff HEAD identifiy difference between STAGED & NOT STAGED from HEAD (Last commit)
+git diff HEAD
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % git add .
suresh@Sureshs-MacBook-Pro comments % git diff 
suresh@Sureshs-MacBook-Pro comments % git diff HEAD
diff --git a/Git_comments b/Git_comments
index 4efed62..07f5426 100644
--- a/Git_comments
+++ b/Git_comments
@@ -74,7 +74,9 @@ merge branch sencondbranch
 
 #removed above line and added new line of same comment to find the diff status
 
-#Git Diff to identify the difference
+#Git Diff to identify the difference NOT STAGED for next commit
 git diff
 # where '-' shows not present in file
-# '+' represents new connet availe in the file
\ No newline at end of file
+# '+' represents new connet availe in the file
+# Git Diff HEAD identifiy difference between STAGED & NOT STAGED from HEAD (Last commit)
+git diff HEAD
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % 


suresh@Sureshs-MacBook-Pro comments % git status
On branch gitdiff
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   Git_comments

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Git_comments
	modified:   gitdiff.txt

suresh@Sureshs-MacBook-Pro comments % git diff 
diff --git a/Git_comments b/Git_comments
index 07f5426..02dce43 100644
--- a/Git_comments
+++ b/Git_comments
@@ -79,4 +79,8 @@ git diff
 # where '-' shows not present in file
 # '+' represents new connet availe in the file
 # Git Diff HEAD identifiy difference between STAGED & NOT STAGED from HEAD (Last commit)
-git diff HEAD
\ No newline at end of file
+git diff HEAD
+
+# Git diff --staged or --cached to list only diff on staged changes
+
+git diff --staged or git diff --cached
\ No newline at end of file
diff --git a/gitdiff.txt b/gitdiff.txt
index 2d4f4de..47aeb09 100644
--- a/gitdiff.txt
+++ b/gitdiff.txt
@@ -73,3 +73,47 @@ index 5ba3f9f..fda547b 100644
 +#Git Diff to identify the difference
 \ No newline at end of file
 suresh@Sureshs-MacBook-Pro comments % 
+
+# Git diff with HEAD
+
+suresh@Sureshs-MacBook-Pro comments % git diff
+diff --git a/Git_comments b/Git_comments
+index 4efed62..07f5426 100644
+--- a/Git_comments
++++ b/Git_comments
+@@ -74,7 +74,9 @@ merge branch sencondbranch
+ 
+ #removed above line and added new line of same comment to find the diff status
+ 
suresh@Sureshs-MacBook-Pro comments % git add .
suresh@Sureshs-MacBook-Pro comments % git diff 
suresh@Sureshs-MacBook-Pro comments % git diff --staged
diff --git a/Git_comments b/Git_comments
index 4efed62..02dce43 100644
--- a/Git_comments
+++ b/Git_comments
@@ -74,7 +74,13 @@ merge branch sencondbranch
 
 #removed above line and added new line of same comment to find the diff status
 
-#Git Diff to identify the difference
+#Git Diff to identify the difference NOT STAGED for next commit
 git diff
 # where '-' shows not present in file
-# '+' represents new connet availe in the file
\ No newline at end of file
+# '+' represents new connet availe in the file
+# Git Diff HEAD identifiy difference between STAGED & NOT STAGED from HEAD (Last commit)
+git diff HEAD
+
+# Git diff --staged or --cached to list only diff on staged changes
+
+git diff --staged or git diff --cached
\ No newline at end of file
diff --git a/gitdiff.txt b/gitdiff.txt
index 2d4f4de..47aeb09 100644
--- a/gitdiff.txt
+++ b/gitdiff.txt
@@ -73,3 +73,47 @@ index 5ba3f9f..fda547b 100644
 +#Git Diff to identify the difference
 \ No newline at end of file
 suresh@Sureshs-MacBook-Pro comments % 
+
+# Git diff with HEAD
+
+suresh@Sureshs-MacBook-Pro comments % git diff
+diff --git a/Git_comments b/Git_comments
+index 4efed62..07f5426 100644
suresh@Sureshs-MacBook-Pro comments % 


suresh@Sureshs-MacBook-Pro comments % git status
On branch gitdiff
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Git_comments

no changes added to commit (use "git add" and/or "git commit -a")
suresh@Sureshs-MacBook-Pro comments % git diff
diff --git a/Git_comments b/Git_comments
index 02dce43..e84018e 100644
--- a/Git_comments
+++ b/Git_comments
@@ -83,4 +83,8 @@ git diff HEAD
 
 # Git diff --staged or --cached to list only diff on staged changes
 
-git diff --staged or git diff --cached
\ No newline at end of file
+git diff --staged or git diff --cached
+
+# Git diff for a specific file
+
+git diff filename
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % 

suresh@Sureshs-MacBook-Pro comments % git diff Git_comments 
diff --git a/Git_comments b/Git_comments
index 02dce43..e84018e 100644
--- a/Git_comments
+++ b/Git_comments
@@ -83,4 +83,8 @@ git diff HEAD
 
 # Git diff --staged or --cached to list only diff on staged changes
 
-git diff --staged or git diff --cached
\ No newline at end of file
+git diff --staged or git diff --cached
+
+# Git diff for a specific file
+
+git diff filename
\ No newline at end of file
suresh@Sureshs-MacBook-Pro comments % 


suresh@Sureshs-MacBook-Pro git-learn % git status
On branch gitdiff_new
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Git_comments

no changes added to commit (use "git add" and/or "git commit -a")
suresh@Sureshs-MacBook-Pro git-learn % git diff gitdiff gitdiff_new
suresh@Sureshs-MacBook-Pro git-learn % git add .
suresh@Sureshs-MacBook-Pro git-learn % git commit -m "create a new diff branch"
[gitdiff_new 31fda16] create a new diff branch
 1 file changed, 5 insertions(+), 1 deletion(-)
suresh@Sureshs-MacBook-Pro git-learn % git diff gitdiff gitdiff_new            
diff --git a/Git_comments b/Git_comments
index e84018e..e7cca72 100644
--- a/Git_comments
+++ b/Git_comments
@@ -87,4 +87,8 @@ git diff --staged or git diff --cached
 
 # Git diff for a specific file
 
-git diff filename
\ No newline at end of file
+git diff filename
+
+#Git diff between branches
+
+git diff branch1 branch2
\ No newline at end of file
suresh@Sureshs-MacBook-Pro git-learn % 

suresh@Sureshs-MacBook-Pro git-learn % git diff 48349ba..3f09dfb
diff --git a/Git_comments b/Git_comments
index fd52428..e7cca72 100644
--- a/Git_comments
+++ b/Git_comments
@@ -72,7 +72,6 @@ merge branch sencondbranch
 
 
 
-
 #removed above line and added new line of same comment to find the diff status
 
 #Git Diff to identify the difference NOT STAGED for next commit
@@ -92,7 +91,4 @@ git diff filename
 
 #Git diff between branches
 
-git diff branch1 branch2
-
-# git diff between commit using commit hash
-git diff commit_hash1 commit_hash2
\ No newline at end of file
+git diff branch1 branch2
\ No newline at end of file
suresh@Sureshs-MacBook-Pro git-learn % 
